stages:
  - build
  - validate
  - test
  - package

variables:
  CYPRESS_CACHE_FOLDER: '${CI_PROJECT_DIR}/.cache/Cypress'
  YARN_CACHE_FOLDER: '${CI_PROJECT_DIR}/.cache/yarn'

.cache:
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - .cache/yarn
      - .cache/Cypress

install:
  stage: build
  extends: .cache
  image: node:10-alpine
  script:
    - yarn --frozen-lockfile --silent
  only:
    changes:
      - yarn.lock

validate:
  image: node:10-alpine
  stage: validate
  extends: .cache
  cache:
    policy: pull
  script:
    - yarn --frozen-lockfile --silent
    - yarn commitlint --from=master --to=$CI_COMMIT_SHA
    - yarn format
    - yarn lint

test:
  stage: test
  image: node:10-alpine
  extends: .cache
  cache:
    policy: pull
  script:
    - yarn --frozen-lockfile --silent
    - yarn test

test:e2e:
  stage: test
  image: cypress/base:10
  extends: .cache
  cache:
    policy: pull
  script:
    - yarn --frozen-lockfile --silent
    - yarn test:e2e
  artifacts:
    when: on_failure
    paths:
      - cypress/screenshots
      - cypress/videos
    expire_in: 1 day

.docker:
  image: docker:stable
  services:
    - docker:dind
  tags:
    - sshoc-backend
  variables:
    DOCKER_RELEASE_IMAGE: ${CI_REGISTRY_IMAGE}/frontend:latest
    DOCKER_TLS_CERTDIR: ''
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $DOCKER_RELEASE_IMAGE || true
    - docker build --cache-from $DOCKER_RELEASE_IMAGE --tag
      $DOCKER_CURRENT_IMAGE --tag $DOCKER_RELEASE_IMAGE .
    - docker push $DOCKER_CURRENT_IMAGE
    - docker push $DOCKER_RELEASE_IMAGE

package:master:
  stage: package
  extends: .docker
  variables:
    DOCKER_CURRENT_IMAGE: ${CI_REGISTRY_IMAGE}/frontend:$CI_COMMIT_SHORT_SHA
  only:
    - master

package:tags:
  stage: package
  extends: .docker
  variables:
    DOCKER_CURRENT_IMAGE: ${CI_REGISTRY_IMAGE}/frontend:$CI_COMMIT_SHORT_SHA
  only:
    - master
